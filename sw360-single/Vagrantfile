# Copyright Siemens AG, 2013-2015. Part of the SW360 Portal Project.
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.
#
# -*- mode: ruby -*-
# vi: set ft=ruby :

require_relative "../shared/configuration.rb"

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Personalization for sw360
  config.ssh.username = SW360_vagrant_user
  if SW360_use_insecure_Keypair == true
    config.ssh.private_key_path = "../shared/insecureKeypair/siemagrant"
  else
    config.ssh.private_key_path = "../shared/siemagrant_key_for_" + SW360_basebox_name
  end
  # see: https://github.com/mitchellh/vagrant/pull/4707
  config.ssh.insert_key = false

  config.vm.provider "virtualbox" do |v|
      v.name = SW360_vm_name
      v.customize ["modifyvm", :id, "--cpus", SW360_CPUs, "--memory", SW360_RAM]
      config.vm.boot_timeout = 600
  end

  config.vm.box = SW360_basebox_name

  if SW360_network_host == true
    config.vm.network "private_network", ip: "192.168.1.200"
  end
  if SW360_https_port
    config.vm.network "forwarded_port", guest: 8443, host: SW360_https_port
  end
  if SW360_couchDB_port
    config.vm.network "forwarded_port", guest: 5984, host: SW360_couchDB_port
  end
  if SW360_tomcat_debug_port
    config.vm.network "forwarded_port", guest: 5005, host: SW360_tomcat_debug_port
  end

  config.vm.synced_folder "../shared", "/vagrant_shared"

  # for this feature to work performant one needs Vagrant to be at least of version 1.5
  if SW360_source
    if File.directory?(SW360_source)
      if Vagrant::VERSION.to_f >= 1.5
        config.vm.synced_folder SW360_source, "/sw360portal",
                                type: "rsync",
                                rsync__auto: "true",
                                rsync__exclude: ["*/target/*"]
      else
        config.vm.synced_folder SW360_source, "/sw360portal"
      end
    end
  end

  # SW360 specific configuration
  config.vm.provision :puppet, :module_path => "../puppet/modules" do |puppet|
    puppet.manifests_path = "../puppet/manifests"
    puppet.manifest_file  = "sw360-single.pp"

    puppet.facter = {
      "proxy_yes" => SW360_proxy,
      "https_port" => SW360_https_port,
      "tomcat_admin_password" => SW360_default_password,
      "liferay_admin_password" => SW360_default_password,
      "liferay_admin_name" => SW360_admin_name,
      "fossology_address" => SW360_fossology_address,
      "max_upload_filesize" => SW360_max_upload_filesize
    }
  end

  if not File.exists?(File.join(File.dirname(__FILE__),".vagrant/action_provision"))
    config.vm.provision "shell", run: "always" do |s|
      s.path       = "sw360-install.sh"
      s.args       = [ "-0" ]
      s.privileged = false
    end
  end

  if SW360_install == true
    config.vm.provision "shell" do |s|
      s.path       = "sw360-install.sh"
      s.privileged = false
    end
  end
end
